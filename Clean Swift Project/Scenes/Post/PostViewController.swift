//
//  PostViewController.swift
//  Clean Swift Project
//
//  Created by Israel3D on 14/05/2019.
//  Copyright (c) 2019 Israel3D. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PostDisplayLogic: class {
    func displayPosts(viewModel: Post.Load.ViewModel)
    func displayComments(viewModel: Post.Comments.ViewModel)
}

class PostViewController: UIViewController, PostDisplayLogic {
    
    var interactor: PostBusinessLogic?
    var router: (NSObjectProtocol & PostRoutingLogic & PostDataPassing)?
    let postView = CommonTableView()
    var arrForPost = [PostModel]()
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = PostInteractor()
        let presenter = PostPresenter()
        let router = PostRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?){
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func loadView() {
        view = postView
    }
    
    override func viewDidLoad(){
        super.viewDidLoad()
        postView.tableView.register(PostCell.self, forCellReuseIdentifier: PostCell.reuseIdentifier)
        postView.tableView.dataSource = self
        postView.tableView.delegate = self
        self.title = "Posts"
        loadPosts()
    }
    
    // MARK: Do something
    
    func loadPosts(){
        let request = Post.Load.Request()
        interactor?.doLoadData(request: request)
    }
    
    func displayPosts(viewModel: Post.Load.ViewModel){
        arrForPost = viewModel.posts
        postView.tableView.reloadData()
    }
    
    func displayComments(viewModel: Post.Comments.ViewModel) {
        
    }
    
}

extension PostViewController: UITableViewDataSource, UITableViewDelegate {
    
    //dataSource
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return arrForPost.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        if let cell = tableView.dequeueReusableCell(withIdentifier: PostCell.reuseIdentifier, for: indexPath) as? PostCell {
            
            let post = arrForPost[indexPath.row]
            cell.lblTitle.text = post.title
            cell.lblDescription.text  = post.body
            
            return cell
        }
        
        return UITableViewCell()
    }
    
    //delegate
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let post = arrForPost[indexPath.row]
        let request = Post.Comments.Request(post: post)
        interactor?.doLoadComments(request: request)
    }
    
    
}
